name: Build & Deploy Docker Containers
on:
  # Trigger this workflow when a PR is submitted to make sure
  # caffeinate-workflows still builds successfully with the new commits.
  pull_request: []

  # Trigger a build and publish of caffeinate-workflows when
  # a new version is tagged.
  release:
    types: [published]

jobs:
  deploy-images:
    runs-on: ubuntu-latest
    env:
      registry: ghcr.io
      username: alecbcs
      repository: caffeinate-workflows

    strategy:
      fail-fast: false
      # A matrix of Dockerfile paths and associated tags
      # Dockerfile in root builds to tag latest
      matrix:
        dockerfile: [[Dockerfile, latest]]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Container Tag Normal
        run: |
          container="${{ env.registry }}/${{ env.username}}/${{ env.repository }}:${{ matrix.dockerfile[1] }}"
          echo "container=${container}" >> $GITHUB_ENV
          echo "versioned=${container}" >> $GITHUB_ENV

        # On a new release create a container with the same tag as the release.
      - name: Set Container Tag Release
        if: github.event_name == 'release'
        run: |
          versioned="${{ env.registry }}/${{ env.username}}/${{ env.repository }}:${GITHUB_REF##*/}-${{ matrix.dockerfile[1] }}"
          echo "versioned=${versioned}" >> $GITHUB_ENV

      - name: Build ${{ matrix.dockerfile[1] }}
        run: |
          printf "Preparing to build ${{ env.container }} from ${{ matrix.dockerfile[0] }}"
          if [ ! -f "${{ matrix.dockerfile[0]}}" ]; then
              printf "Dockerfile ${{ matrix.dockerfile[0] }} does not exist"
              exit 1;
          fi
          docker build -f ${{ matrix.dockerfile[0] }} --build-arg version=${GITHUB_REF##*/} -t ${{ env.container }} -t ${{ env.versioned }} .
          docker images

      - name: Log in to GitHub Container Registry
        # Don't log into registry on pull request.
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.registry }}
          username: ${{ env.username }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy ${{ matrix.dockerfile[1] }}
        # And Don't log push the container on a pull request.
        if: github.event_name != 'pull_request'
        run: docker push ${{ env.registry }}/${{ env.username}}/${{ env.repository }} --all-tags
